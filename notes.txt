Variables in a Makefile are like shortcuts or labels for values you don’t want to repeat.
They're written like this:

NAME = push_swap
SRCS = main.c utils.c
_______________________________________________________________________________________________________
Then later, you can use them like this:

$(NAME)
$(SRCS)
_______________________________________________________________________________________________________
“To build this (target), I need these (dependencies), and here’s how to do it (commands).”

target: dependencies
	commands to build the target

%.o=%.c
	$(CC) $(CFLAGS) -c $@ -o @<

$@ = target
$< = dependencies

-c means "compile only, don’t link"
It turns a .c file into a .o file (object file)
Use it when you want to compile files separately

-o means "output file name"
It lets you choose the name of the file gcc makes (like main.o or program)

Usually in Makefiles:
  compile with -c and -o to get .o files
  then link all .o files to make the final program
_______________________________________________________________________________________________________
char **str means you already have an array of strings somewhere and just want to use it — you’re passing a pointer to that existing array.
int **num_out means you want the function to create or change the pointer itself (make it point somewhere new), so you pass a pointer to the pointer.

_______________________________________________________________________________________________________
jot -r 500 -100000000000000000000000000000000000000000000000
00000000000000000000000 10000000000000000000000000000000000
000000000000000000000000000000000000 | tr '\n' ' ' | ./push_swap

_______________________________________________________________________________________________________

ra (rotate a) = shift elements left by 1:
First becomes last.
1 2 3 → 2 3 1

rra (reverse rotate a) = shift elements right by 1:
Last becomes first.
1 2 3 → 3 1 2

_______________________________________________________________________________________________________

sort_5.c

index 0: 1 2 3 4 5 -- none

index 4: 2 3 4 5 1 -- rra

index 3: 2 3 4 1 5 -- rra rra

index 2: 2 3 1 4 5 -- ra sa

index 1: 2 1 3 4 5 -- sa

_______________________________________________________________________________________________________

sort_4.c

index 0: 1 2 3 4 -- none
index 1: 2 1 3 4 -- sa
index 2: 2 3 1 4 -- ra sa
index 3: 2 3 4 1 -- rra
